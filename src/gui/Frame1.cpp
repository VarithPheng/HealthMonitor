#include "Frame1.h"
#include "inputmanually/Frame2.h"
#include "display/Frame3.h"
#include "autogenerated/Auto.h"
#include "display/Display.h"
#include "../database/databaseConnection.h"

#include <wx/font.h>


Frame1::Frame1(const wxString& title)
    : wxFrame(nullptr, wxID_ANY, title, wxDefaultPosition, wxSize(735, 280),
        wxDEFAULT_FRAME_STYLE & ~(wxRESIZE_BORDER | wxMAXIMIZE_BOX))
{
    wxPanel* panel = new wxPanel(this);

    // Draw Rectangle background behind the title text
    panel->Bind(wxEVT_PAINT, &Frame1::drawRectangle, this);

    wxFont titleFont(32, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, "Georgia");
    // Title text
    titleText = new wxStaticText(panel, wxID_ANY, "Health Monitoring System", wxPoint(65.9, 9.8));
    titleText->SetFont(titleFont);
    titleText->SetForegroundColour(*wxWHITE);
    titleText->SetBackgroundColour(wxColour("#38b6ff"));

    wxFont selectOneFont(25, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, false, "Georgia");
    selectOneText = new wxStaticText(panel, wxID_ANY, "Select one!", wxPoint(283, 89));
    selectOneText->SetFont(selectOneFont);
    selectOneText->SetForegroundColour(*wxBLACK);

    wxFont buttonFont(10, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, "Georgia");

    inputManuallyButton = new wxButton(panel, wxID_ANY, "Manual Input", wxPoint(7.2, 157.3), wxSize(223, 66));
    inputManuallyButton->SetFont(buttonFont);
    inputManuallyButton->SetBackgroundColour(wxColour("#0097b2"));
    inputManuallyButton->SetForegroundColour(*wxWHITE);

    autoGeneratedButton = new wxButton(panel, wxID_ANY, "Auto-Generated", wxPoint(241.3, 157.3), wxSize(232, 66));
    autoGeneratedButton->SetFont(buttonFont);
    autoGeneratedButton->SetBackgroundColour(wxColour("#ff914d"));
    autoGeneratedButton->SetForegroundColour(*wxWHITE);

    displayButton = new wxButton(panel, wxID_ANY, "Display", wxPoint(484.4, 157.3), wxSize(223, 66));
    displayButton->SetFont(buttonFont);
    displayButton->SetBackgroundColour(wxColour("#549f34"));
    displayButton->SetForegroundColour(*wxWHITE);

    inputManuallyButton->Bind(wxEVT_BUTTON, &Frame1::inputManuallyButtonClicked, this);
    autoGeneratedButton->Bind(wxEVT_BUTTON, &Frame1::autoGeneratedButtonClicked, this);
    displayButton->Bind(wxEVT_BUTTON, &Frame1::displayButtonClicked, this);
}

void Frame1::drawRectangle(wxPaintEvent& event)
{
    // Get the panel from the event (if needed)
    wxPanel* panel = dynamic_cast<wxPanel*>(event.GetEventObject());

    // Create a wxPaintDC object to perform drawing
    wxPaintDC dc(panel);

    // Set the pen for drawing
    dc.SetPen(wxPen(wxColour("#38b6ff"), 2)); // Outline color
    dc.SetBrush(wxBrush(wxColour("#38b6ff"))); // Fill color

    dc.DrawRectangle(0, 0, 715, 70);
}

void Frame1::inputManuallyButtonClicked(wxCommandEvent& event)
{
    Frame2* frame2 = new Frame2("Health Monitor");
    frame2->Show();

    // Close the current frame (Frame1)
    Close();
}

void Frame1::autoGeneratedButtonClicked(wxCommandEvent& event)
{
    Auto automatically;
    automatically.autoGenerated();

    std::string name = automatically.getName();
    std::string gender = automatically.getGender();
    std::string ageGroup = automatically.getAgeGroup();
    std::string exactAge = automatically.getExactAge();
    int heartRate = automatically.getHeartRate();
    int bloodPressure1 = automatically.getBloodPressure1();
    int bloodPressure2 = automatically.getBloodPressure2();
    double temperature = automatically.getTemperature();

    // Insert data into the database
    dbConnection.insertPatientData(conn, name, gender, ageGroup, exactAge,
        heartRate, bloodPressure1, bloodPressure2, temperature);

    // Initialize image handlers
    wxInitAllImageHandlers();

    Frame3* frame3 = new Frame3("Health Monitor", name, gender, ageGroup, exactAge,
        heartRate, bloodPressure1, bloodPressure2, temperature);

    frame3->Show();

    // Close the current frame (Frame1)
    Close();
}

void Frame1::displayButtonClicked(wxCommandEvent& event)
{
    std::string name;
    std::string gender;
    std::string ageGroup;
    std::string exactAge;
    int heartRate = 0;
    int bloodPressure1 = 0;
    int bloodPressure2 = 0;
    double temperature = 0.0;

    // start with patient at row 1
    dbConnection.retrievePatientData(conn, 1, name, gender, ageGroup, exactAge,
        heartRate, bloodPressure1, bloodPressure2, temperature);

    // Initialize image handlers
    wxInitAllImageHandlers();

    Display* display = new Display("Health Monitor", 1, name, gender, ageGroup, exactAge,
        heartRate, bloodPressure1, bloodPressure2, temperature);

    display->Show();

    // Close the current frame (Frame1)
    Close();
}