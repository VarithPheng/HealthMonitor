#include <cstdlib>
#include <ctime>
#include <sstream>
#include "Auto.h"

Auto::Auto()
{
	srand(static_cast<unsigned int>(time(0))); // Set the random number generator with the current time
	autoGenerated();
};

void Auto::autoGenerated()
{
	std::string generatedNameList[20] =
	{
		"Alice", "Bob", "Charlie", "Daisy", "Ethan",
		"Fiona", "George", "Hannah", "Ian", "Julia",
		"Kevin", "Lily", "Michael", "Nina", "Oscar",
		"Paula", "Quinn", "Rachel", "Steve", "Tina"
	};

	int randomIndex1 = std::rand() % 20; // generate random index from 0 to 19
	generatedName = generatedNameList[randomIndex1];

	std::string generatedGenderList[2] = { "Male", "Female" };
	int randomIndex2 = std::rand() % 2; // generate random index from 0 to 1;
	generatedGender = generatedGenderList[randomIndex2];

	std::string generatedAgeGroupList[8] =
	{
		"Newborn",
		"Infant",
		"Toddler",
		"Preschooler",
		"School-aged child",
		"Teenager",
		"Adult",
		"Older Adult"
	};
	int randomIndex3 = std::rand() % 8; // generate random index from 0 to 7
	generatedAgeGroup = generatedAgeGroupList[randomIndex3];

	if (generatedAgeGroup == "Newborn")
	{
		std::string generatedExactAgeList[5] = { "Birth", "1 week", "2 weeks", "3 weeks", "4 weeks" };
		int randomIndex4 = std::rand() % 5; // generate random index from 0 to 4
		generatedExactAge = generatedExactAgeList[randomIndex4];
	}
	else if (generatedAgeGroup == "Infant")
	{
		std::string generatedExactAgeList[11] =
		{
			"1 month", "2 months", "3 months", "4 months", "5 months",
			"6 months", "7 months", "8 months", "9 months", "10 months",
			"11 months"
		};
		int randomIndex5 = std::rand() % 11; // generated random index from 0 to 10
		generatedExactAge = generatedExactAgeList[randomIndex5];
	}
	else if (generatedAgeGroup == "Toddler")
	{
		int generatedExactAgeInt = std::rand() % 3 + 1; // generate random number from 1 to 3
		std::stringstream ss;
		ss << generatedExactAgeInt;
		generatedExactAge = ss.str();
	}
	else if (generatedAgeGroup == "Preschooler")
	{
		int generatedExactAgeInt = std::rand() % 2 + 4; // generate random number from 4 to 5
		std::stringstream ss;
		ss << generatedExactAgeInt;
		generatedExactAge = ss.str();
	}
	else if (generatedAgeGroup == "School-aged child")
	{
		int generatedExactAgeInt = std::rand() % 7 + 6; // generate random numbers from 6 to 12
		std::stringstream ss;
		ss << generatedExactAgeInt;
		generatedExactAge = ss.str();
	}
	else if (generatedAgeGroup == "Teenager")
	{
		int generatedExactAgeInt = std::rand() % 5 + 13; // generate random numbers from 13 to 17
		std::stringstream ss;
		ss << generatedExactAgeInt;
		generatedExactAge = ss.str();
	}
	else if (generatedAgeGroup == "Adult")
	{
		int generatedExactAgeInt = std::rand() % 47 + 18; // generate random number from 18 to 64
		std::stringstream ss;
		ss << generatedExactAgeInt;
		generatedExactAge = ss.str();
	}
	else
	{
		int generatedExactAgeInt = std::rand() % 56 + 65; // generate random number from 65 to 120
		std::stringstream ss;
		ss << generatedExactAgeInt;
		generatedExactAge = ss.str();
	}

	generatedHeartRate = std::rand() % 151 + 50; // generate number between 50 and 200
	generatedBloodPressure1 = std::rand() % 121 + 30; // generate number between 30 and 150
	generatedBloodPressure2 = std::rand() % 81 + 20; // generate number between 20 and 100
	generatedTemperature = 35.0 + static_cast<double>(std::rand()) / RAND_MAX * (39.9 - 35.0); // generate decimal number between 35.0 and 39.9
	generatedTemperature = round(generatedTemperature * 10.0) / 10.0; // round to 1 decimal place
}